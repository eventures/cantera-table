Features:

  * Load scalar time series data.  The data may arrive in any order

  * Cluster time series data.  This rebuilds an "input.data" file in (key,
    time) order.

  * Produce an interpolated, gauss-normalized, clustered version of the data

    - Clusters are stored as entries: cluster:0 to cluster:FF

  * Allow nearest neighbor queries
Data format:

  Array of:

    byte[]     key (UTF-8), NUL-terminated
    integer    format
                 0x00 = Time series
                 0x01 = NN search resutls
    [data in given format]

  Time series:

    integer    array_size

    Array of:

      integer  relative timestamp
      integer  step size
      integer  count
      float[]  value

  NN search results:

    integer    count
    integer[]  relative offset of entry
    float[]    correlation

  integer:

    Each integer is represented as a sequence of bytes.  7 bits of information
    are stored for each byte.  If the top bit of a byte is set, more bytes are
    to come.  The most significant bits are stored in the first byte, to
    simplify decoding.

Index format:

  uint64[]     offset of entry in data file

Hashmap format:

  Indexed using X31 hash of key:

  uint64[]     offset of entry in data file

File names:

  journal
  input.data
  input.index
  clustered.weekly.data
  clustered.weekly.index
  clustered.weekly.hashmap
