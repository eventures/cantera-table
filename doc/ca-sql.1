.TH CANTERA-TABLE 1 "Feb 2013"
.PP
.SH "NAME"
ca-sql \- syntax of the Cantera Table query language
.SH "STATEMENTS"
.TP
\fBCREATE TABLE\fR name \fB(\fRcolumns\fB) WITH (PATH =\fR path\fB)\fR
Creates a table at the given path.  If the backing table does not exist, it will be created when it is first accessed.
.TP
\fBDROP TABLE\fR name
Removes the table with the given name from the schema.  The backing file is not removed.
.TP
\fBSHOW TABLES\fR
An alias for \fBSELECT * FROM ca_catalog.ca_tables\fR
.TP
\fBDESCRIBE\fR table
An alias for \fBSELECT * FROM ca_catalog.ca_columns WHERE table_name =\fR table
.TP
\fBSELECT\fR expression \fB[,\fR expression\fB...]\fR \fB[FROM\fR table\fB] [WHERE\fR expression\fB] [OFFSET\fR integer\fB] [LIMIT\fR integer\fB]\fR
Retrieves rows from the specified table, and prints the value of the listed expressions in the context of each row.  If the \fBFROM\fR keyword is not used, the expressions are evaluated exactly once, as if you were selecting from a 1 row table with no columns.

If the \fBWHERE\fR keyword is used, only rows where its parameter expression evaluates to \fBTRUE\fR will be retrieved.  Note that this expression MUST be boolean.
.TP
\fBSET OUTPUT FORMAT\fR format
Sets the format used in response to \fBSELECT\fR statements.  Supported formats are:
.RS
.TP
\fBCSV\fR
Values are cast to strings and separated by \fBTAB\fR.  Rows are separated by \fBLF\fR.  \fBTAB\fR and \fBLF\fR characters within strings are escaped to avoid ambiguity.  This is the default output format.
.TP
\fBJSON\fR
The result set is printed as an array of objects in JSON format.
.RE
.TP
\fBSET TIME FORMAT\fR format
Sets the format that will be used to output string.  The default is
\fB'%Y-%m-%dT%H:%M:S'\fR, the ISO 8601 combined date and time format.  Use
\fB'%s'\fR to get the number of seconds since UNIX epoch.
.SH "EXPRESSIONS"
.TP
lhs \fBAND\fR rhs
\fBTRUE\fR if \fBlhs\fR and \fBrhs\fR are both equal to \fBTRUE\fR, \fBFALSE\fR otherwise.
.TP
lhs \fBOR\fR rhs
\fBTRUE\fR if either \fBlhs\fR or \fBrhs\fR is equal to \fBTRUE\fR, \fBFALSE\fR otherwise.
.TP
lhs \fBrelational operator\fR rhs
\fBTRUE\fR if \fBlhs\fR relates to \fBrhs\fR as suggested by the operator, \fBFALSE\fR otherwise.  The operators are \fB<\fR, \fB<=\fR, \fB=\fR, \fB>=\fR, \fB>\fR and \fB!=\fR.  The operators work with \fBTEXT\fR values as well as numerical values.
.TP
subject \fBLIKE\fR pattern
Both \fBsubject\fR and \fBpattern\fR must be strings.  Returns \fBTRUE\fR if
the subject matches the pattern, \fBFALSE\fR otherwise.  The pattern is applied
to the entire subject, not just a substring.  A \fB_\fR character in the
pattern matches any character in the subject.  A \fB%\fR character in the
pattern matches any number of any character in the subject.
.TP
function\fB([\fRexpression\fB, ...])\fR
Call \fBfunction\fR with the supplied arguments.  The arguments need to be
exactly the same type as required by the function signature; no implicit
casting is performed.
.TP
expression\fB::\fRtype
Cast \fBexpression\fR to \fBtype\fR, possibly through a lossy process if no
lossless process exists, e.g. converting from \fBUINT64\fR to \fBUINT8\fB.
.TP
\fB(\fRexpr\fB)\fR
Returns the value of \fBexpr\fR.  The parantheses instruct the parser about the
order in which operators take precedence.
.SH "FUNCTIONS"
.TP
FLOAT4 \fBTS_SAMPLE\fR(TIME_FLOAT4[], TIMESTAMP WITH TIME ZONE)
Returns a value from a timestamped float4 array for a given timestamp, or NaN
if no value was found.
.TP
FLOAT4 \fBABS\fR(FLOAT4), FLOAT8 \fBABS\fR(FLOAT8)
Returns the absolute value of the argument.
.TP
\fBSIN\fR, \fBCOS\fR, \fBTAN\fR, \fBSINH\fR, \fBCOSH\fR, \fBTANH\fR, \fBASIN\fR, \fBACOS\fR, \fBATAN\fR
The trigonometric functions operate on radians, and take either a \fBFLOAT4\fR
or a \fBFLOAT8\fR as an argument, and returns the same type.
.TP
FLOAT4 \fBATAN2\fR(FLOAT4, FLOAT4), FLOAT8 \fBATAN2\fR(FLOAT8, FLOAT8)
Returns the arc tangent of two variables, effectively calculating the angle of a 2D vector.  ATAN2(1.0::FLOAT4, 0.0::FLOAT4) returns π/2, which represents 90°.
.TP
FLOAT4 \fBSQRT\fR(FLOAT4), FLOAT8 \fBSQRT\fR(FLOAT8)
Returns the square root of the argument.
.TP
FLOAT4 \fBCBRT\fR(FLOAT4), FLOAT8 \fBCBRT\fR(FLOAT8)
Returns the cube root of the argument.
.TP
FLOAT4 \fBCEIL\fR(FLOAT4), FLOAT8 \fBCEIL\fR(FLOAT8)
Returns the value of the argument rounded up to the nearest integer.
.TP
FLOAT4 \fBFLOOR\fR(FLOAT4), FLOAT8 \fBFLOOR\fR(FLOAT8)
Returns the value of the argument rounded down to the nearest integer.
.TP
FLOAT4 \fBROUND\fR(FLOAT4), FLOAT8 \fBROUND\fR(FLOAT8)
Returns the value of the argument rounded to the nearest integer.  ROUND(0.5) is 1.0 and ROUND(-0.5) is -1.0.
.TP
FLOAT4 \fBTRUNC\fR(FLOAT4), FLOAT8 \fBTRUNC\fR(FLOAT8)
Returns the value of the argument to the nearest integer not larger in absolute value, i.e. towards zero.
.TP
FLOAT4 \fBEXP\fR(FLOAT4), FLOAT8 \fBEXP\fR(FLOAT8)
Returns the mathematical constant \fBe\fR raised to the power of the argument.  EXP(1) returns approximately 2.71828.
.TP
FLOAT4 \fBLOG\fR(FLOAT4), FLOAT8 \fBLOG\fR(FLOAT8)
Returns the natural logarithm of the argument.  LOG(2.718281828::FLOAT4) returns 1.  1828 is the birth year of Henrik Ibsen.
.TP
FLOAT4 \fBLOG10\fR(FLOAT4), FLOAT8 \fBLOG10\fR(FLOAT8)
Returns the base 10 logarithm of the argument.  LOG(1000.0::FLOAT4) returns 3.
.TP
FLOAT4 \fBPOW\fR(FLOAT4, FLOAT4), FLOAT8 \fBPOW\fR(FLOAT8, FLOAT8)
Returns the first argument raised to the power of the second.  POW(2.0::FLOAT4, 10.0::FLOAT4) returns 1024.
.TP
FLOAT4 \fBFMOD\fR(FLOAT4, FLOAT4), FLOAT8 \fBFMOD\fR(FLOAT8, FLOAT8)
Returns the floating-point remainder of dividing the first argument with the second argument.
.SH "AUTHOR"
.PP
This manual page was written by Morten Hustveit <morten.hustveit@gmail.com>.
